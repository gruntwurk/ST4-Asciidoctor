// SYNTAX TEST "Packages/ST4-Asciidoctor/Syntaxes/Asciidoctor.sublime-syntax"
= Callout List

AsciiDoc Documentation reference:
https://docs.asciidoctor.org/asciidoc/latest/verbatim/callouts/[Callouts^]


== Example 1

[.big.red]*Source*

[source,asciidoc]
......................................
[source,ruby]
-----------------------
require 'sinatra' <1>

get '/hi' do <2> <3>
  "Hello World!"
end
-----------------------

<1> Library import
<2> URL mapping
<3> Response block
......................................


[.big.red]*Result*

======================================
[source,ruby]
-----------------------
require 'sinatra' <1>

get '/hi' do <2> <3>
  "Hello World!"
end
-----------------------

<1> Library import
<2> URL mapping
<3> Response block
======================================

ifeval::[0 == 1]
<1> Library import
//<-                    string.unquoted.list.callout
//<-                    constant.numeric.callout
//<-                    punctuation.definition.calloutlistnumber.begin
//^                     string.unquoted.list.callout
//^                     constant.numeric.callout
//^                     punctuation.definition.calloutlistnumber.end
<2> URL mapping
//<-                    string.unquoted.list.callout
//<-                    constant.numeric.callout
//<-                    punctuation.definition.calloutlistnumber.begin
<3> Response block
//^                     string.unquoted.list.callout
//^                     constant.numeric.callout
//^                     punctuation.definition.calloutlistnumber.end
endif::[]


[NOTE]
==========================
Ideally, for how tests above we could have used an `+++{empty}+++` or `{+++blank+++}` attribute to force indentation of the `<1>` callout, in order to allow more room for testing single characters scopes with carets (`^`):

[source,asciidoc,subs=attributes]
\{blank}<1> Library import
{blank}//     ^^^    string.unquoted.list.callout
{blank}//     ^^^    constant.numeric.callout
{blank}//     ^      punctuation.definition.calloutlistnumber.begin
{blank}//       ^    punctuation.definition.calloutlistnumber.end
{blank}//      ^     string.unquoted.list.callout.asciidoc
{blank}//      ^     constant.numeric.callout.asciidoc


Asciidoctor would ignore the `+++{empty}+++` or `{+++blank+++}` attributes, since they don't emit anything, so the list will be represented as expected in the final generated document.

Currently the syntax doesn't allow for attributes to be placed at the beginning of the line.
It might be worth considering tweaking the syntax in that respect, even though this might be an edge case rarely found in real-case usage.
==========================

// EOF //
